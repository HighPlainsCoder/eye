---
format_version: 2
common:
  slack_failure: &slack_failure
    - plugin:
        configuration:
          id: slack.task
          version: 1.3.1
        options:
          Channel: asylum
          ColorType: Danger
          DisplayName: "Pipeline: $GO_PIPELINE_NAME,"
          IconOrEmoji: ":fry:"
          Message: "Danger Will Robinson: <https://go.lijit.com/go/tab/build/detail/$GO_PIPELINE_NAME/$GO_PIPELINE_COUNTER/$GO_STAGE_NAME/$GO_STAGE_COUNTER/$GO_JOB_NAME|Click here> for details."
          Title: "Pipeline: $GO_PIPELINE_NAME, Stage: $GO_STAGE_NAME, Job: $GO_JOB_NAME, Failure!"
          WebhookUrl: "https://hooks.slack.com/services/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"
        run_if: failed
  slack_success: &slack_success
    - plugin:
        configuration:
          id: slack.task
          version: 1.3.1
        options:
          Channel: asylum
          ColorType: Good
          DisplayName: "Pipeline: $GO_PIPELINE_NAME,"
          IconOrEmoji: ":woohoo:"
          Message: "Golly Seg, it worked: <https://go.lijit.com/go/tab/build/detail/$GO_PIPELINE_NAME/$GO_PIPELINE_COUNTER/$GO_STAGE_NAME/$GO_STAGE_COUNTER/$GO_JOB_NAME|Click here> for details."
          Title: "Stage: $GO_STAGE_NAME, Job: $GO_JOB_NAME, success!"
          WebhookUrl: "https://hooks.slack.com/services/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"
        run_if: passed
pipelines:
  bias.pipeline:
    group: dataplatform
    label_template: 0.0.0.${COUNT}
    locking: false
    environment_variables:
      COMPONENT: bias
    materials:
      default_repo:
        git: "git@github.com:sovrn/bias.git"
    stages:
      - build.artifact:
          clean_workspace: yes
          fetch_materials: yes
          jobs:
            create.artifact:
              artifacts:
                - build:
                    source: target
                    destination: build
              resources:
                - nimbus2000
              tasks:
                - script: |
                      set -x on
                      mvn versions:set -DnewVersion=${GO_PIPELINE_LABEL}
                      mvn -B clean package ##Build commands
                      /usr/bin/git rev-parse --short HEAD > ./target/git_rev
                      /usr/bin/git tag -a v${GO_PIPELINE_LABEL} -m "SCM AUTOMATED BUILD"
                      /usr/bin/git push origin --tags
                      cp target/*.jar /disk1/sovrn-aws-repo/
                - *slack_failure
          keep_artifacts: yes
      - integration.test:
          clean_workspace: yes
          fetch_materials: yes
          jobs:
            create.artifact:
              artifacts:
              - build:
                  source: target
                  destination: build
              resources:
              - nimbus2000
              tasks:
              - script: |
                  set -x on
                  mvn versions:set -DnewVersion=${GO_PIPELINE_LABEL}
                  ./run_cuke.sh
                  mvn "-Dsonar.host.url=https://qubeui-sonar-prod.dcos.lijit.com/" sonar:sonar
              - *slack_failure
          keep_artifacts: yes
      - deploy.DEV:
          clean_workspace: yes
          fetch_materials: yes
          jobs:
            deploy:
              environment_variables:
                ENV: DEV
                S3_DEB_BUCKET: sovrn-code-dev/dp/bias/
              resources:
                - nimbus2000
              tasks:
                - fetch:
                    job: create.artifact
                    pipeline: bias.pipeline
                    source: build/target
                    stage: build.artifact
                - script: |
                      set -x on
                      cp target/git_rev git_rev
                      GIT_REV=`cat git_rev`
                      source /var/go/assumerole.sh dev
                      aws s3 cp target/${COMPONENT}.deb  s3://${S3_DEB_BUCKET}
                - *slack_failure
                - *slack_success
      - deploy.PRD:
          approval: manual
          clean_workspace: yes
          fetch_materials: yes
          jobs:
            deploy:
              environment_variables:
                ENV: PRD
                AWS_DEFAULT_REGION: us-east-2
                S3_DEB_BUCKET: sovrn-code-prd/dp/bias/
              resources:
                - nimbus2000
              tasks:
                - fetch:
                    job: create.artifact
                    pipeline: bias.pipeline
                    source: build/target
                    stage: build.artifact
                - script: |
                      set -x on
                      cp target/git_rev git_rev
                      GIT_REV=`cat git_rev`
                      source /var/go/assumerole.sh prd
                      aws s3 cp target/${COMPONENT}.deb  s3://${S3_DEB_BUCKET}
                - *slack_failure
                - *slack_success

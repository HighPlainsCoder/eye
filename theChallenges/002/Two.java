// Unlike normal java programs, this has no package



/**
 * Two, the second Euler task

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

 */

class fibonacci {
    long prior;
    long current;

    public fibonacci() {
        prior=1;
        current=2;
    }

    public long next() {
        long next = prior+current;
        prior=current;
        current=next;
        return next;
    }
}

class evenfibonacci {
    long helper;
    long current;

    public evenfibonacci() {
        helper = 2*1;
        current = 2;
    }

    public long next() {
        //NOTE: I could take out these multiplies, but its probable the java JIT already does that
        long next = 3*current + helper;
        helper += 4*current;
        current = next;
        return next;
    }
}


public class Two {
    public static void main(String[] args) {

        fibonacci fib = new fibonacci();
        System.out.print("Checking the fibonacci class 1 " + String.valueOf(fib.current));

        for (int ix=2;ix<20;++ix)
            System.out.print(" " + String.valueOf(fib.next()));

        System.out.println("");

        // first, a simple routine
        long sum=0;
        boolean done=false;
        fib = new fibonacci();

        while(!done) {
            if (fib.current%2==0)
                sum += fib.current;
            if (fib.next() > 4000000) {
                done=true;// yeah, this is superflous here. Sue me.
                break;
            }
        }

        System.out.println("Sum of even fibonacci #s <4,000,000 = " + String.valueOf(sum));


        // next, a more complex one;
        sum=0;
        done=false;
        fib = new fibonacci();

        while(!done) {
            sum += fib.current;
            fib.next(); // odd
            fib.next(); //odd
            if (fib.next() > 4000000) {
                break;
            }
        }
        System.out.println("Sum of even fibonacci #s <4,000,000 = " + String.valueOf(sum));

        evenfibonacci even = new evenfibonacci();

        System.out.print ("testing a class that returns only every even fibonacci " + String.valueOf(even.current));
        for (int ix=2;ix<20;++ix)
            System.out.print(" " + String.valueOf(even.next()));

         System.out.println("");

        sum=0;
        done=false;
        even = new evenfibonacci();

        while(!done) {
            sum += even.current;
            if (even.next() > 4000000) {
                break;
            }
        }
        System.out.println("Sum of even fibonacci #s <4,000,000 = " + String.valueOf(sum));

    }
}
